const express = require('express');
const mongoose = require('mongoose');
const router = express.Router();
const Report = require('../schema/schema')
const app = express();

var coll = [], DataSend = [{
    rH : Number,
    rM : Number,
    rL : Number,
    rT : Number,
    tR : Number,
    tM : Number,
    tL : Number,
    tT : Number
}]

var rhigh = 0, rmedium = 0, rlow = 0, rtotal = 0, thigh = 0, tmedium = 0, tlow = 0, ttotal = 0, total = 0

mongoose.connection.on('connected', () => {
    mongoose.connection.db.listCollections().toArray(function (err, names) {
        if (err) {
            console.log(err);
        }

        else {
            names.forEach(function (e, i, a) {
                coll.push(e.name)
            })
        }

        function sortFunction(a, b) {
            if (a === b) {
                return 0;
            }

            else {
                return (a < b) ? -1 : 1;
            }
        }

        coll.sort(sortFunction);


        for (item in coll) {
            const dbReport = mongoose.model(coll[item], Report)
            dbReport.find({})
                .then((data) => {
                    for (item in data) {
                        if (data[item].Severity === 'High') {
                            thigh++
                        }

                        else if (data[item].Severity === 'Medium') {
                            tmedium++
                        }

                        else {
                            tlow++
                        }
                    }

                    total++
                })
        }

        const dbReport = mongoose.model(coll[coll.length - 1], Report)
        dbReport.find({})
            .then((data) => {
                for (item in data) {
                    if (data[item].Severity === 'High') {
                        rhigh++
                    }

                    else if (data[item].Severity === 'Medium') {
                        rmedium++
                    }

                    else {
                        rlow++
                    }

                    rtotal++
                }
            })

        //cors policy avoid
        router.get('/', (req, res) => {            
            ttotal = (thigh + tmedium + tlow) / total
            DataSend = [{
                rH : rhigh,
                rM : rmedium,
                rL : rlow,
                rT : rtotal,
                tR : Math.round(thigh / total),
                tM : Math.round(tmedium / total),
                tL : Math.round(tlow / total),
                tT : Math.round(ttotal)
            }]

            console.log(DataSend)

            console.log('sent')
            res.setHeader('Access-Control-Allow-origin', '*');
            res.json(DataSend)
        })
    })

    console.log('Mongoose is connected!!!!');
})

module.exports = router