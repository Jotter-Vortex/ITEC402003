const express = require('express');
const mongoose = require('mongoose');
const router = express.Router();
const Report = require('../schema/schema')
const app = express();

var coll = [], allData = [], DataSend = [{
    rH: Number,
    rM: Number,
    rL: Number,
    rT: Number,
    tR: Number,
    tM: Number,
    tL: Number,
    tT: Number
}]

var rhigh = 0, rmedium = 0, rlow = 0, rtotal = 0, thigh = 0, tmedium = 0, tlow = 0, ttotal = 0, total = 0, blank = []
//cors policy avoid
router.get('/', (req, res) => {
    if (mongoose.connection.readyState === 1 || mongoose.connection.readyState === 2) {
        mongoose.connection.db.listCollections().toArray(function (err, names) {
            coll = []
            if (coll.length === 0) {
                if (err) {
                    console.log(err);
                }

                else {
                    names.forEach(function (e, i, a) {
                        coll.push(e.name)
                    })
                }

                function sortFunction(a, b) {
                    if (a === b) {
                        return 0;
                    }

                    else {
                        return (a < b) ? -1 : 1;
                    }
                }
            }

            coll.sort(sortFunction);

            rhigh = 0, rmedium = 0, rlow = 0, rtotal = 0, thigh = 0, tmedium = 0, tlow = 0, ttotal = 0, total = 0

            for (item in coll) {
                var report = mongoose.model('report', Report, coll[coll.length - 1]);
                report.find((error, data) => {
                    if (data.length !== 0) {
                        if (error) {
                            console.log(error)
                        }

                        else {
                            for (item in data) {
                                if (data[item].Severity === 'High') {
                                    thigh++
                                }

                                else if (data[item].Severity === 'Medium') {
                                    tmedium++
                                }

                                else {
                                    tlow++
                                }
                            }

                            total++
                        }
                    }
                })
            }

            var report = mongoose.model('report', Report, coll[coll.length - 1]);
            report.find((error, data) => {
                if (data.length !== 0) {
                    if (error) {
                        console.log(error)
                    }

                    else {
                        for (item in data) {
                            if (data[item].Severity === 'High') {
                                rhigh++
                            }

                            else if (data[item].Severity === 'Medium') {
                                rmedium++
                            }

                            else {
                                rlow++
                            }

                            rtotal++
                        }
                    }

                    ttotal = (thigh + tmedium + tlow) / total
                    DataSend = [{
                        rH: rhigh,
                        rM: rmedium,
                        rL: rlow,
                        rT: rtotal,
                        tR: Math.round(thigh / total),
                        tM: Math.round(tmedium / total),
                        tL: Math.round(tlow / total),
                        tT: Math.round(ttotal)
                    }]
                }
            })
        })
    }

    res.json(DataSend)
})

module.exports = router